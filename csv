package com.flujos.flujosbd.services.impl;

import com.flujos.flujosbd.dao.ResponsablesflujosDao;
import com.flujos.flujosbd.model.Responsablesflujos;
import com.flujos.flujosbd.services.CSVService;
import com.opencsv.CSVWriter;
import com.opencsv.bean.*;
import com.opencsv.exceptions.CsvDataTypeMismatchException;
import com.opencsv.exceptions.CsvRequiredFieldEmptyException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;

import java.io.*;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;

@Repository
@Transactional
public class CSVServiceImpl implements CSVService {



    @Autowired
    private ResponsablesflujosDao responsablesflujosDao;

    //Delimiter used in CSV file
    private static final String COMMA_DELIMITER = "|";
    private static final String NEW_LINE_SEPARATOR = "\n";

    //CSV file header
    private static final String FILE_HEADER = "id,EMPLEADO,FCCORREO";


    FileWriter fileWriter = null;


    public void crearcsvfile()throws IOException,
            CsvDataTypeMismatchException,
            CsvRequiredFieldEmptyException {


        List<Responsablesflujos> list = responsablesflujosDao.findAll();


        try {
            fileWriter = new FileWriter("ARCHIVO.CSV");

            //Write the CSV file header
            fileWriter.append(FILE_HEADER.toString());

            //Add a new line separator after the header
            fileWriter.append(NEW_LINE_SEPARATOR);

            //Write a new student object list to the CSV file
            for (Responsablesflujos responsablesflujos : list) {
                fileWriter.append(String.valueOf(responsablesflujos.getFinumempleado()));
                fileWriter.append(COMMA_DELIMITER);
                fileWriter.append(responsablesflujos.getFcnombre());
                fileWriter.append(COMMA_DELIMITER);
                fileWriter.append(String.valueOf(responsablesflujos.getFccorreo()));
                fileWriter.append(NEW_LINE_SEPARATOR);
            }



            System.out.println("CSV file was created successfully !!!");

        } catch (Exception e) {
            System.out.println("Error in CsvFileWriter !!!");
            e.printStackTrace();
        } finally {

            try {
                fileWriter.flush();
                fileWriter.close();
            } catch (IOException e) {
                System.out.println("Error while flushing/closing fileWriter !!!");
                e.printStackTrace();
            }

        }



    }
}
